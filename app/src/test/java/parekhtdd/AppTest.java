/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package parekhtdd;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Arrays;


public class AppTest {
    //Given that I a new shopper, when I begin shopping, then I expect my cart to be empty.
    @Test
     public void EmptyCartOnFirstTime(){
        //Setup
        Cart cart = new Cart();
        //Execute
        int size = cart.getItems().size();
        //Assert
        assertEquals(0,size);
    }

    // Given I have an empty cart, when I add an Item, then I expect to the price reflect the sum of all the Items in my cart.
    @Test
    public void ChangeSumAfterAddingItem(){
        //Setup
        Cart cart = new Cart();
        Item item = new Item("Book",200,false);
        //Execute
        cart.addItem(item, 2);
        int sum = cart.SumOfCart();
        //Assert
        assertEquals(400,sum);
    }

    // Given I have cart with one item, when I add more of that item, then I expect to see its quantity update on the cart.
    @Test
    public void UpdateQuantityAfterAddingItem(){
        //Setup
        Cart cart = new Cart();
        Item item1 = new Item("Book",200,false);
        Item item2 = new Item("Shoes",100,false);
        //Execute
        cart.addItem(item1, 2);
        cart.addItem(item2, 5);
        int quantity = cart.QuantityOfCart();
        //Assert
        assertEquals(7, quantity);
    }
    
    //Given I have an empty cart, when I add items, then I expect it to see an itemized list of the items along with their price and quantity.
    @Test
    public void GetListOfItemsAfterAdding(){
        //Setup
        Cart cart = new Cart();
        Item item1 = new Item("Book",200,false);
        Item item2 = new Item("Shoes",100,false);
        //Execute
        cart.addItem(item1, 2);
        cart.addItem(item2, 5);
        ArrayList<String> itemizedList = cart.getItems();
        ArrayList<String> expected = new ArrayList<>( Arrays.asList("Item name: Book Quantity: 2 Price: 200","Item name: Shoes Quantity: 5 Price: 100"));
        //Assert
        assertEquals(expected, itemizedList);
    }

    //Given I have a cart with items that are not on sale, when I add an item that's on sale, I expect to see it highlighted.
    @Test
    public void highlightedSalesItem(){
         //Setup
         Cart cart = new Cart();
         Item item1 = new Item("Book",200,false);
         Item item2 = new Item("Toy",500,false);
         Item item3 = new Item("Shoes",100,true);
         //Execute
         cart.addItem(item1, 2);
         cart.addItem(item2, 5);
         cart.addItem(item3, 1);
         ArrayList<String> itemizedList = cart.getItems();
         ArrayList<String> expected = new ArrayList<>( Arrays.asList("Item name: Book Quantity: 2 Price: 200","Item name: Toy Quantity: 5 Price: 500","Item name: Shoes Quantity: 1 Price: 100 highlited"));
         //Assert
         assertEquals(expected, itemizedList);
    }
}
